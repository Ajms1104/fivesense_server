# .github/workflows/ci.yml

name: CI for Frontend and Backend

# main 브랜치에 push 이벤트가 발생하면 실행
on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      # 변경된 디렉토리 목록을 다른 Job에 전달하기 위한 output
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # 이전 커밋과의 비교를 위해 전체 git 히스토리를 가져옵니다.
          fetch-depth: 0

      - name: Find changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'fivesense/**'

    # - 'finbert/**' - 'Deep_learning/**'

  # 2. Frontend 빌드 및 테스트 Job
  build-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    
    # 작업의 기본 디렉토리를 frontend로 설정합니다.
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # 프로젝트에 맞는 Node.js 버전 사용

      - name: Install dependencies
        run: npm install

      - name : Grant execute permission for Vite
        run : chmod +x ./node_modules/.bin/vite

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

  # 3. Backend 빌드 및 테스트 Job
  build-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        # PostgreSQL 컨테이너의 환경 변수
        env:
          POSTGRES_DB: fivesense       # 테스트용 데이터베이스 이름
          POSTGRES_USER: postgres  # 사용자 이름
          POSTGRES_PASSWORD: 1234 # 비밀번호
        # 컨테이너가 준비되었는지 확인하는 옵션 
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    defaults:
      run:
        working-directory: ./fivesense

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21' # 프로젝트에 맞는 JDK 버전 
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew build

      - name: Build with Gradle
        env:
          # Spring Boot가 이 환경 변수를 application.properties보다 우선적으로 사용합니다.
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/fivesense
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: 1234
        run: ./gradlew build